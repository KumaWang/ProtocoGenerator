<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Peachpie.Library.XmlDom</name>
    </assembly>
    <members>
        <member name="T:Peachpie.Library.XmlDom.DOMAttr">
            <summary>
            Represents an attribute in the <see cref="T:Peachpie.Library.XmlDom.DOMElement"/> object. 
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMAttr.nodeName">
            <summary>
            Returns the name of the attribute.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMAttr.nodeValue">
            <summary>
            Returns or sets the value of the attribute.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMAttr.namespaceURI">
            <summary>
            Returns the namespace URI of the attribute.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMAttr.nodeType">
            <summary>
            Returns the type of the node (<see cref="F:Peachpie.Library.XmlDom.NodeType.Attribute"/>).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMAttr.name">
            <summary>
            Returns the name of the attribute.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMAttr.value">
            <summary>
            Returns or sets the value of this attribute
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMAttr.specified">
            <summary>
            Always returns <B>true</B> as in PHP 5.1.6.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMAttr.ownerElement">
            <summary>
            Returns the <see cref="T:Peachpie.Library.XmlDom.DOMElement"/> to which this attribute belongs.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMAttr.schemaTypeInfo">
            <summary>
            Not implemented in PHP 5.1.6.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMAttr.__construct(System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:Peachpie.Library.XmlDom.DOMAttr"/> object.
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMCharacterData">
            <summary>
            Represents nodes with character data. No nodes directly correspond to this class, but other nodes do inherit from it.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMCharacterData.data">
            <summary>
            Returns or sets the data of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMCharacterData.length">
            <summary>
            Returns the length of the data in characters.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMCharacterData.substringData(System.Int32,System.Int32)">
            <summary>
            Retrieves a substring of the full string from the specified range.
            </summary>
            <param name="offset">The position within the string to start retrieving.</param>
            <param name="count">The number of characters to retrieve.</param>
            <returns>The substring corresponding to the specified range or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMCharacterData.appendData(System.String)">
            <summary>
            Appends the specified string to the end of the character data of the node.
            </summary>
            <param name="arg">The string to insert into the existing string.</param>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMCharacterData.insertData(System.Int32,System.String)">
            <summary>
            Inserts the specified string at the specified character offset. 
            </summary>
            <param name="offset">The position within the string to insert the supplied string data.</param>
            <param name="arg">The string data that is to be inserted into the existing string.</param>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMCharacterData.deleteData(System.Int32,System.Int32)">
            <summary>
            Removes a range of characters from the node.
            </summary>
            <param name="offset">The position within the string to start deleting.</param>
            <param name="count">The number of characters to delete.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMCharacterData.replaceData(System.Int32,System.Int32,System.String)">
            <summary>
            Replaces the specified number of characters starting at the specified offset with the specified string.
            </summary>
            <param name="offset">The position within the string to start replacing.</param>
            <param name="count">The number of characters to replace.</param>
            <param name="arg">The new data that replaces the old string data.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMText">
            <summary>
            Inherits from <see cref="T:Peachpie.Library.XmlDom.DOMCharacterData"/> and represents the textual content of a
            <see cref="T:Peachpie.Library.XmlDom.DOMElement"/> or <see cref="T:Peachpie.Library.XmlDom.DOMAttr"/>. 
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMText.nodeName">
            <summary>
            Returns &quot;#text&quot;.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMText.nodeValue">
            <summary>
            Returns or sets the text.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMText.namespaceURI">
            <summary>
            Returns <B>null</B>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMText.nodeType">
            <summary>
            Returns the type of the node (<see cref="F:Peachpie.Library.XmlDom.NodeType.Text"/>).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMText.wholeText">
            <summary>
            Gets the concatenated values of the node and all its child nodes.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMText.#ctor(System.Xml.XmlCharacterData)">
            <summary>
            This constructor can be used either with proper <see cref="T:System.Xml.XmlText"/> or with <see cref="T:System.Xml.XmlWhitespace"/>
            or <see cref="T:System.Xml.XmlSignificantWhitespace"/>. PHP uses <see cref="T:Peachpie.Library.XmlDom.DOMText"/> for all these cases.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMText.splitText(System.Int32)">
            <summary>
            Splits the node into two nodes at the specified offset, keeping both in the tree as siblings.
            </summary>
            <param name="offset">The offset at which to split the node.</param>
            <returns>The new node or <b>false</b> if <paramref name="offset"/> is invalid.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMText.isWhitespaceInElementContent">
            <summary>
            Determines whether this text node is empty / whitespace only.
            </summary>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMCdataSection">
            <summary>
            Inherits from <see cref="T:Peachpie.Library.XmlDom.DOMText"/> for textural representation of CData constructs. 
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMCdataSection.nodeName">
            <summary>
            Returns &quot;#cdata-section&quot;.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMCdataSection.nodeType">
            <summary>
            Returns the type of the node (<see cref="F:Peachpie.Library.XmlDom.NodeType.CharacterDataSection"/>).
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMComment">
            <summary>
            Represents comment nodes, characters delimited by <!-- and -->.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMComment.nodeName">
            <summary>
            Returns &quot;#comment&quot;.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMComment.nodeValue">
            <summary>
            Returns or sets the text.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMComment.namespaceURI">
            <summary>
            Returns <B>null</B>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMComment.nodeType">
            <summary>
            Returns the type of the node (<see cref="F:Peachpie.Library.XmlDom.NodeType.Comment"/>).
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMConfiguration">
            <summary>
            Represents a configuration of a <see cref="T:Peachpie.Library.XmlDom.DOMDocument"/>, currently not implemented in PHP nor Peachpie.
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMDocument">
            <summary>
            Represents an entire HTML or XML document; serves as the root of the document tree.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.nodeName">
            <summary>
            Returns &quot;#document&quot;.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.nodeValue">
            <summary>
            Returns <B>null</B>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.nodeType">
            <summary>
            Returns the type of the node (<see cref="F:Peachpie.Library.XmlDom.NodeType.Document"/>).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.doctype">
            <summary>
            Returns the node containing the DOCTYPE declaration.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.implementation">
            <summary>
            Returns the DOM implementation.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.documentElement">
            <summary>
            Returns the root element of this document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.actualEncoding">
            <summary>
            Returns the encoding of this document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.xmlEncoding">
            <summary>
            Returns the encoding of this document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.encoding">
            <summary>
            Returns or set the encoding of this document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.xmlStandalone">
            <summary>
            Returns or sets the standalone flag of this document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.standalone">
            <summary>
            Returns or sets the standalone flag of this document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.xmlVersion">
            <summary>
            Returns or sets the XML version of this document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.version">
            <summary>
            Returns or sets the XML version of this document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.strictErrorChecking">
            <summary>
            Returns <B>true</B>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.documentURI">
            <summary>
            Returns the base URI of this document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.config">
            <summary>
            Returns <B>null</B>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.formatOutput">
            <summary>
            Returns or sets whether XML is formatted by <see cref="!:save(string,int)"/> and <see cref="!:saveXML(DOMNode)"/>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.validateOnParse">
            <summary>
            Returns of sets whether XML is validated against schema by <see cref="!:load(DOMDocument,string,int)"/> and
            <see cref="!:loadXML(DOMDocument,string,int)"/>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.resolveExternals">
            <summary>
            Returns <B>false</B>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.preserveWhiteSpace">
            <summary>
            Returns or sets whether whitespace should be preserved by this XML document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.recover">
            <summary>
            Returns <B>false</B>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocument.substituteEntities">
            <summary>
            Returns <B>false</B>.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.createElement(System.String,System.String)">
            <summary>
            Creates an element with the specified name and inner text.
            </summary>
            <param name="tagName">The qualified name of the element.</param>
            <param name="value">The inner text (value) of the element.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.DOMElement"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.createDocumentFragment">
            <summary>
            Creates a new document fragment.
            </summary>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.DOMDocumentFragment"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.createTextNode(System.String)">
            <summary>
            Creates a new text node with the specified text.
            </summary>
            <param name="data">The text for the text node.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.DOMText"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.createComment(System.String)">
            <summary>
            Creates a comment node containing the specified data.
            </summary>
            <param name="data">The comment data.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.DOMComment"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.createCDATASection(System.String)">
            <summary>
            Creates a CDATA section containing the specified data.
            </summary>
            <param name="data">The content of the new CDATA section.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.DOMCdataSection"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.createProcessingInstruction(System.String,System.String)">
            <summary>
            Creates a processing instruction with the specified name and data.
            </summary>
            <param name="target">The name of the processing instruction.</param>
            <param name="data">The data for the processing instruction.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.DOMProcessingInstruction"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.createAttribute(System.String)">
            <summary>
            Creates an attribute with the specified name.
            </summary>
            <param name="name">The qualified name of the attribute.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.DOMAttr"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.createEntityReference(System.String)">
            <summary>
            Creates an entity reference with the specified name.
            </summary>
            <param name="name">The name of the entity reference.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.DOMEntityReference"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.createElementNS(System.String,System.String,System.String)">
            <summary>
            Creates an element with the specified namespace URI and qualified name.
            </summary>
            <param name="namespaceUri">The namespace URI of the element.</param>
            <param name="qualifiedName">The qualified name of the element.</param>
            <param name="value">The inner text (value) of the element.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.DOMElement"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.createAttributeNS(System.String,System.String)">
            <summary>
            Creates an attribute with the specified namespace URI and qualified name.
            </summary>
            <param name="namespaceUri">The namespace URI of the attribute.</param>
            <param name="qualifiedName">The qualified name of the attribute.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.DOMAttr"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.getElementsByTagName(System.String)">
            <summary>
            Gets all descendant elements with the matching tag name.
            </summary>
            <param name="name">The tag name. Use <B>*</B> to return all elements within the element tree.</param>
            <returns>A <see cref="T:Peachpie.Library.XmlDom.DOMNodeList"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.getElementsByTagNameNS(System.String,System.String)">
            <summary>
            Gets all descendant elements with the matching namespace URI and local name.
            </summary>
            <param name="namespaceUri">The namespace URI.</param>
            <param name="localName">The local name. Use <B>*</B> to return all elements within the element tree.</param>
            <returns>A <see cref="T:Peachpie.Library.XmlDom.DOMNodeList"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.getElementById(System.String)">
            <summary>
            Not yet implemented.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.importNode(Peachpie.Library.XmlDom.DOMNode,System.Boolean)">
            <summary>
            Imports a node from another document to the current document.
            </summary>
            <param name="importedNode">The node being imported.</param>
            <param name="deep"><B>True</B> to perform deep clone; otheriwse <B>false</B>.</param>
            <returns>The imported <see cref="T:Peachpie.Library.XmlDom.DOMNode"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.adoptNode(Peachpie.Library.XmlDom.DOMNode)">
            <summary>
            Not implemented in PHP 7.1.1.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.normalizeDocument">
            <summary>
            Puts the entire XML document into a &quot;normal&quot; form.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.renameNode(Peachpie.Library.XmlDom.DOMNode,System.String,System.String)">
            <summary>
            Not implemented in PHP 7.1.1.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.registerNodeClass(System.String,System.String)">
            <summary>
            Register extended class used to create base node type.
            </summary>
            <param name="baseclass">The DOM class that you want to extend.</param>
            <param name="extendedclass">Your extended class name. If NULL is provided, any previously
            registered class extending <paramref name="baseclass"/> will be removed.</param>
            <returns>Returns <b>true</b> on success or <b>false</b> on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.load(Pchp.Core.Context,System.String,System.Int32)">
            <summary>
            Loads the XML document from the specified URL.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="fileName">URL for the file containing the XML document to load.</param>
            <param name="options">Undocumented.</param>
            <returns><b>True</b> on success or <b>false</b> on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.loadXML(Pchp.Core.Context,System.String,System.Int32)">
            <summary>
            Loads the XML document from the specified string.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="xmlString">The XML string.</param>
            <param name="options">Undocumented.</param>
            <returns><b>True</b> on success or <b>false</b> on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.loadXMLInternal(Pchp.Core.Context,System.String,System.Int32,System.Boolean)">
            <summary>
            Loads provided XML string into this <see cref="T:Peachpie.Library.XmlDom.DOMDocument"/>.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="xmlString">String representing XML document.</param>
            <param name="options">PHP options.</param>
            <param name="isHtml">Whether the <paramref name="xmlString"/> represents XML generated from HTML document (then it may contain some invalid XML characters).</param>
            <returns></returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.save(Pchp.Core.Context,System.String,System.Int32)">
            <summary>
            Saves the XML document to the specified stream.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="fileName">The location of the file where the document should be saved.</param>
            <param name="options">Unsupported.</param>
            <returns>The number of bytes written or <B>false</B> on error.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.saveXML(Pchp.Core.Context,Peachpie.Library.XmlDom.DOMNode,System.Int32)">
            <summary>
            Returns the string representation of this document.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="node">The node to dump (the entire document if <B>null</B>).</param>
            <param name="options">Unsupported.</param>
            <returns>The string representation of the document / the specified node or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.SaveXMLInternal(Pchp.Core.Context,System.IO.Stream,Peachpie.Library.XmlDom.DOMNode,System.Boolean)">
            <summary>
            Saves this document to a given stream.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="outStream">The output stream.</param>
            <param name="node">The node to dump (the entire document if <B>null</B>).</param>
            <param name="omitXmlDeclaration">Whether to skip the opening XML declaration.</param>
            <returns>True for success, false for failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.CheckHtmlErrors(Pchp.Core.Context,HtmlAgilityPack.HtmlDocument,System.String)">
            <summary>
            Processes HTML errors, if any.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="htmlDoc"><see cref="T:HtmlAgilityPack.HtmlDocument"/> instance to process errors from.</param>
            <param name="filename">HTML file name or <c>null</c> if HTML has been loaded from a string.</param>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.loadHTML(Pchp.Core.Context,System.String,System.Int32)">
            <summary>
            Loads HTML from a string.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="source">String containing HTML document.</param>
            <param name="options">Unsupported.</param>
            <returns>TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.loadHTMLFile(Pchp.Core.Context,System.String,System.Int32)">
            <summary>
            Loads HTML from a file.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="sourceFile">Path to a file containing HTML document.</param>
            <param name="options">Unsupported.</param>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.loadHTML(Pchp.Core.Context,System.IO.TextReader,System.String,System.Int32)">
            <summary>
            Load HTML DOM from given <paramref name="stream"/>.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.saveHTML(Pchp.Core.Context,Peachpie.Library.XmlDom.DOMNode)">
            <summary>
            Dumps the internal document into a string using HTML formatting.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="node">Optional parameter to output a subset of the document.</param>
            <returns>Returns the HTML, or FALSE if an error occurred.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.saveHTMLFile(Pchp.Core.Context,System.String)">
            <summary>
            Dumps the internal document into a file using HTML formatting.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="file">The path to the saved HTML document.</param>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.xinclude(System.Int32)">
            <summary>
            Not implemented (TODO: need a XInclude implementation for this).
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.validate">
            <summary>
            Not implemented (System.Xml does not support post-load DTD validation).
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.schemaValidate(Pchp.Core.Context,System.String,System.Int32)">
            <summary>
            Validates the document against the specified XML schema.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="schemaFile">URL for the file containing the XML schema to load.</param>
            <param name="flags">Unsupported.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.schemaValidateSource(Pchp.Core.Context,System.String,System.Int32)">
            <summary>
            Validates the document against the specified XML schema.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="schemaString">The XML schema string.</param>
            <param name="flags">Unsupported.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.relaxNGValidate(System.String)">
            <summary>
            Not implemented (TODO: will need a Relax NG validator for this).
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocument.relaxNGValidateSource(System.String)">
            <summary>
            Not implemented (TODO: will need a Relax NG validator for this).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocumentFragment.nodeName">
            <summary>
            Returns &quot;#document-fragment&quot;.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocumentFragment.nodeValue">
            <summary>
            Returns <B>null</B>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocumentFragment.namespaceURI">
            <summary>
            Returns the namespace URI of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocumentFragment.nodeType">
            <summary>
            Returns the type of the node (<see cref="F:Peachpie.Library.XmlDom.NodeType.DocumentFragment"/>).
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMDocumentFragment.appendXML(System.String)">
            <summary>
            Appends (well-formed) XML data to this document fragment.
            </summary>
            <param name="data">The data to append.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMDocumentType">
            <summary>
            Each <see cref="T:Peachpie.Library.XmlDom.DOMDocument"/> has a doctype attribute whose value is either NULL
            or a <see cref="T:Peachpie.Library.XmlDom.DOMDocumentType"/> object.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocumentType.nodeType">
            <summary>
            Returns the type of the node (<see cref="F:Peachpie.Library.XmlDom.NodeType.DocumentType"/>).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocumentType.name">
            <summary>
            Returns the name of this document type.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocumentType.entities">
            <summary>
            Returns a map of the entities declared by this document type.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocumentType.notations">
            <summary>
            Returns a map of the entities declared by this document type.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocumentType.publicId">
            <summary>
            Returns the value of the public identifier of this document type.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocumentType.systemId">
            <summary>
            Gets the value of the system identifier on this document type.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMDocumentType.internalSubset">
            <summary>
            Gets the value of the DTD internal subset on this document type.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMElement.nodeName">
            <summary>
            Returns the name of the element.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMElement.nodeValue">
            <summary>
            Returns or sets the value (inner text) of the element.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMElement.namespaceURI">
            <summary>
            Returns the namespace URI of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMElement.nodeType">
            <summary>
            Returns the type of the node (<see cref="F:Peachpie.Library.XmlDom.NodeType.Element"/>).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMElement.attributes">
            <summary>
            Returns a map of attributes of this node (see <see cref="T:Peachpie.Library.XmlDom.DOMNamedNodeMap"/>).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMElement.tagName">
            <summary>
            Returns the tag name.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMElement.schemaTypeInfo">
            <summary>
            Not implemented in PHP 7.1.1, always returns NULL.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.getAttribute(System.String)">
            <summary>
            Returns the value of an attribute.
            </summary>
            <param name="name">The attribute name.</param>
            <returns>The attribute value or empty string.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.getAttributeNS(System.String,System.String)">
            <summary>
            Returns the value of an attribute.
            </summary>
            <param name="namespaceUri">The attribute namespace URI.</param>
            <param name="localName">The attribute local name.</param>
            <returns>The attribute value or empty string.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.setAttribute(System.String,System.String)">
            <summary>
            Sets the value of a attribute (creates new one if it does not exist).
            </summary>
            <param name="name">The attribute name.</param>
            <param name="value">The attribute value.</param>
            <returns><B>True</B> on success, <B>false</B> on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.setAttributeNS(System.String,System.String,System.String)">
            <summary>
            Sets the value of a attribute (creates new one if it does not exist).
            </summary>
            <param name="namespaceUri">The attribute namespace URI.</param>
            <param name="qualifiedName">The attribute qualified name.</param>
            <param name="value">The attribute value.</param>
            <returns><B>True</B> on success, <B>false</B> on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.removeAttribute(System.String)">
            <summary>
            Removes an attribute.
            </summary>
            <param name="name">The attribute name.</param>
            <returns><B>True</B> on success, <B>false</B> on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.removeAttributeNS(System.String,System.String)">
            <summary>
            Removes an attribute.
            </summary>
            <param name="namespaceUri">The attribute namespace URI.</param>
            <param name="localName">The attribute local name.</param>
            <returns><B>True</B> on success, <B>false</B> on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.getAttributeNode(System.String)">
            <summary>
            Returns an attribute node.
            </summary>
            <param name="name">The attribute name.</param>
            <returns>The attribute or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.getAttributeNodeNS(System.String,System.String)">
            <summary>
            Returns an attribute node.
            </summary>
            <param name="namespaceUri">The attribute namespace URI.</param>
            <param name="localName">The attribute local name.</param>
            <returns>The attribute or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.setAttributeNode(Peachpie.Library.XmlDom.DOMAttr)">
            <summary>
            Adds new attribute node to the element.
            </summary>
            <param name="attribute">The attribute node.</param>
            <returns>Old node if the attribute has been replaced or <B>null</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.setAttributeNodeNS(Peachpie.Library.XmlDom.DOMAttr)">
            <summary>
            Adds new attribute node to the element.
            </summary>
            <param name="attribute">The attribute node.</param>
            <returns>Old node if the attribute has been replaced or <B>null</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.removeAttributeNode(Peachpie.Library.XmlDom.DOMAttr)">
            <summary>
            Removes an attribute node from the element.
            </summary>
            <param name="attribute">The attribute node.</param>
            <returns>Old node if the attribute has been removed or <B>null</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.hasAttribute(System.String)">
            <summary>
            Checks whether an attribute exists.
            </summary>
            <param name="name">The attribute name.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.hasAttributeNS(System.String,System.String)">
            <summary>
            Checks whether an attribute exists.
            </summary>
            <param name="namespaceUri">The attribute namespace URI.</param>
            <param name="localName">The attribute local name.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.getElementsByTagName(System.String)">
            <summary>
            Gets all descendant elements with the matching tag name.
            </summary>
            <param name="name">The tag name. Use <B>*</B> to return all elements within the element tree.</param>
            <returns>A <see cref="T:Peachpie.Library.XmlDom.DOMNodeList"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.getElementsByTagNameNS(System.String,System.String)">
            <summary>
            Gets all descendant elements with the matching namespace URI and local name.
            </summary>
            <param name="namespaceUri">The namespace URI.</param>
            <param name="localName">The local name. Use <B>*</B> to return all elements within the element tree.</param>
            <returns>A <see cref="T:Peachpie.Library.XmlDom.DOMNodeList"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.setIdAttribute(System.String,System.Boolean)">
            <summary>
            Not implemented in PHP 5.1.6.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.setIdAttributeNS(System.String,System.String,System.Boolean)">
            <summary>
            Not implemented in PHP 5.1.6.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMElement.setIdAttributeNode(Peachpie.Library.XmlDom.DOMAttr,System.Boolean)">
            <summary>
            Not implemented in PHP 5.1.6.
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMEntity">
            <summary>
            This class represents a known entity, either parsed or unparsed, in an XML document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMEntity.nodeType">
            <summary>
            Returns the type of the node (<see cref="F:Peachpie.Library.XmlDom.NodeType.Entity"/>).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMEntity.publicId">
            <summary>
            Returns the public identifier of this entity.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMEntity.systemId">
            <summary>
            Returns the system identifier of this entity.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMEntity.notationName">
            <summary>
            Returns the name of the optional NDATA attribute.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMEntity.actualEncoding">
            <summary>
            Always returns <B>null</B> as in PHP 5.1.6.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMEntity.encoding">
            <summary>
            Always returns <B>null</B> as in PHP 5.1.6.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMEntity.version">
            <summary>
            Always returns <B>null</B> as in PHP 5.1.6.
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMEntityReference">
            <summary>
            DOM entity reference.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMEntityReference.nodeName">
            <summary>
            Returns the name of the entity reference.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMEntityReference.nodeValue">
            <summary>
            Returns <B>null</B>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMEntityReference.namespaceURI">
            <summary>
            Returns <B>null</B>.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMEntityReference.nodeType">
            <summary>
            Returns the type of the node (<see cref="F:Peachpie.Library.XmlDom.NodeType.EntityReference"/>).
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.ExceptionCode">
            <summary>
            Enumerates <see cref="T:Peachpie.Library.XmlDom.DOMException"/> codes.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.IndexOutOfBounds">
            <summary>
            Index or size is negative, or greater than the allowed value. 
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.StringTooLong">
            <summary>
            The specified range of text does not fit into a string.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.BadHierarchy">
            <summary>
            A node is inserted somewhere it doesn't belong.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.WrongDocument">
            <summary>
            A node is used in a different document than the one that created it.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.InvalidCharacter">
            <summary>
            An invalid or illegal character is specified, such as in a name.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.DataNotAllowed">
            <summary>
            Data is specified for a node which does not support data.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.DomModificationNotAllowed">
            <summary>
            An attempt is made to modify an object where modifications are not allowed.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.NotFound">
            <summary>
            An attempt is made to reference a node in a context where it does not exist.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.NotSupported">
            <summary>
            The implementation does not support the requested type of object or operation.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.AttributeInUse">
            <summary>
            An attempt is made to add an attribute that is already in use elsewhere.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.InvalidState">
            <summary>
            An attempt is made to use an object that is not, or is no longer, usable.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.SyntaxError">
            <summary>
            An invalid or illegal string is specified.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.ModificationNotAllowed">
            <summary>
            An attempt is made to modify the type of the underlying object.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.NamespaceError">
            <summary>
            An attempt is made to create or change an object in a way which is incorrect with
            regard to namespaces.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.InvalidAccess">
            <summary>
            A parameter or an operation is not supported by the underlying object.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.ExceptionCode.ValidationError">
            <summary>
            A call to a method such as <B>insertBefore</B> or <B>removeChild</B> would make the
            node invalid with respect to &quot;partial validity&quot;, this exception would be
            raised and the operation would not be done. 
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMException">
            <summary>
            DOM operations raise exceptions under particular circumstances, i.e., when an operation
            is impossible to perform for logical reasons.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMException.code">
            <summary>
            Returns the exception code.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMException.Throw(Peachpie.Library.XmlDom.ExceptionCode)">
            <summary>
            Throws a <see cref="T:Peachpie.Library.XmlDom.DOMException"/> user exception with the given code.
            </summary>
            <param name="code">The exception code.</param>
            <exception cref="T:Peachpie.Library.XmlDom.DOMException"/>
            <exception cref="T:System.ArgumentException">If the <paramref name="code"/> is invalid.</exception>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMException.Throw(Peachpie.Library.XmlDom.ExceptionCode,System.String)">
            <summary>
            Throws a <see cref="T:Peachpie.Library.XmlDom.DOMException"/> user exception with the given code and message.
            </summary>
            <param name="code">The exception code.</param>
            <param name="message">The exception message.</param>
            <exception cref="T:Peachpie.Library.XmlDom.DOMException"/>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMImplementation">
            <summary>
            Provides a number of methods for performing operations that are independent of any particular instance of the document object model.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMImplementation.getFeature(System.String,System.String)">
            <summary>
            Not implemented in PHP 7.1.1.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMImplementation.hasFeature(System.String,System.String)">
            <summary>
            Tests if this DOM implementation implements a specific feature.
            </summary>
            <param name="feature">The feature.</param>
            <param name="version">The feature version.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMImplementation.createDocumentType(System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Peachpie.Library.XmlDom.DOMDocumentType"/>.
            </summary>
            <param name="qualifiedName">Name of the document type.</param>
            <param name="publicId">The public identifier of the document type.</param>
            <param name="systemId">The system identifier of the document type.</param>
            <returns>The <see cref="T:Peachpie.Library.XmlDom.DOMDocumentType"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMImplementation.createDocument(System.String,System.String,Peachpie.Library.XmlDom.DOMDocumentType)">
            <summary>
            Creates a new <see cref="T:Peachpie.Library.XmlDom.DOMDocument"/>.
            </summary>
            <param name="namespaceUri">The namespace URI of the root element to create.</param>
            <param name="qualifiedName">The qualified name of the document element.</param>
            <param name="docType">The type of document to be created.</param>
            <returns>The <see cref="T:Peachpie.Library.XmlDom.DOMDocument"/>.</returns>
        </member>
        <member name="F:Peachpie.Library.XmlDom.DOMNamedNodeMap._map">
            <summary>
            Hash map of the names to the nodex.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.DOMNamedNodeMap._list">
            <summary>
            List of the nodes.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.DOMNamedNodeMap._element">
            <summary>
            Current element index.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNamedNodeMap.length">
            <summary>
            The number of nodes in the map. The range of valid child node indices is 0 to <see cref="P:Peachpie.Library.XmlDom.DOMNamedNodeMap.length"/> - 1 inclusive.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNamedNodeMap.getNamedItem(System.String)">
            <summary>
            Retrieves a node specified by name.
            </summary>
            <param name="name">The (local) name of the node to retrieve.</param>
            <returns>A node with the specified (local) node name or <B>null</B> if no node is found.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNamedNodeMap.setNamedItem(Peachpie.Library.XmlDom.DOMNode)">
            <summary>
            Not implemented in PHP 5.1.6.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNamedNodeMap.removeNamedItem(System.String)">
            <summary>
            Not implemented in PHP 5.1.6.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNamedNodeMap.item(System.Int32)">
            <summary>
            Retrieves a node specified by an index.
            </summary>
            <param name="index">The index.</param>
            <returns>The node or <B>null</B> if <paramref name="index"/> is invalid.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNamedNodeMap.getNamedItemNS(System.String,System.String)">
            <summary>
            Retrieves a node specified by local name and namespace URI.
            </summary>
            <param name="namespaceUri">The namespace URI.</param>
            <param name="localName">The local name.</param>
            <returns>A node with the specified local name and namespace URI, or <B>null</B> if no node is found.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNamedNodeMap.setNamedItemNS(Peachpie.Library.XmlDom.DOMNode)">
            <summary>
            Not implemented in PHP 5.1.6.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNamedNodeMap.removeNamedItemNS(System.String,System.String)">
            <summary>
            Not implemented in PHP 5.1.6.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.nodeName">
            <summary>
            Returns the name of the node (exact meaning depends on the particular subtype).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.nodeValue">
            <summary>
            Returns or sets the value of the node (exact meaning depends on the particular subtype).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.nodeType">
            <summary>
            Returns the type of the node (to be overriden).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.parentNode">
            <summary>
            Returns the parent of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.childNodes">
            <summary>
            Returns all children of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.firstChild">
            <summary>
            Returns the first child of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.lastChild">
            <summary>
            Returns the last child of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.previousSibling">
            <summary>
            Returns the previous sibling of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.nextSibling">
            <summary>
            Returns the next sibling of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.attributes">
            <summary>
            Returns a map of attributes of this node (overriden in <see cref="T:Peachpie.Library.XmlDom.DOMElement"/>).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.ownerDocument">
            <summary>
            This function returns the document the current node belongs to.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.namespaceURI">
            <summary>
            Returns the namespace URI of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.prefix">
            <summary>
            Returns or sets the namespace prefix of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.localName">
            <summary>
            Returns the local name of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.baseURI">
            <summary>
            Returns the base URI of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNode.textContent">
            <summary>
            Returns or sets the text content of the node.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.CheckedChildOperation(Peachpie.Library.XmlDom.DOMNode,Peachpie.Library.XmlDom.DOMNode,Peachpie.Library.XmlDom.DOMNode.NodeAction)">
            <summary>
            Performs a child-adding action with error checks.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.insertBefore(Peachpie.Library.XmlDom.DOMNode,Peachpie.Library.XmlDom.DOMNode)">
            <summary>
            Adds a new child before a reference node.
            </summary>
            <param name="newNode">The new node.</param>
            <param name="refNode">The reference node. If not supplied, <paramref name="newNode"/> is appended
            to the children.</param>
            <returns>The inserted node.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.replaceChild(Peachpie.Library.XmlDom.DOMNode,Peachpie.Library.XmlDom.DOMNode)">
            <summary>
            Replaces a child node.
            </summary>
            <param name="newNode">The new node.</param>
            <param name="oldNode">The old node.</param>
            <returns>The inserted node.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.appendChild(Peachpie.Library.XmlDom.DOMNode)">
            <summary>
            Adds a new child at the end of the children.
            </summary>
            <param name="newNode">The node to add.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.removeChild(Peachpie.Library.XmlDom.DOMNode)">
            <summary>
            Removes a child from the list of children.
            </summary>
            <param name="oldNode">The node to remove.</param>
            <returns>The removed node.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.hasChildNodes">
            <summary>
            Checks if the node has children.
            </summary>
            <returns><B>True</B> if this node has children, <B>false</B> otherwise.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.hasAttributes">
            <summary>
            Checks if the node has attributes.
            </summary>
            <returns><B>True</B> if this node has attributes, <B>false</B> otherwise.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.lookupPrefix(System.String)">
            <summary>
            Gets the namespace prefix of the node based on the namespace URI.
            </summary>
            <param name="namespaceUri">The namespace URI.</param>
            <returns>The prefix of the namespace or <B>null</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.lookupNamespaceUri(System.String)">
            <summary>
            Gets the namespace URI of the node based on the prefix.
            </summary>
            <param name="prefix">The prefix.</param>
            <returns>The namespace URI or <B>null</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.isDefaultNamespace(System.String)">
            <summary>
            Determines whether the given URI is the default namespace.
            </summary>
            <param name="namespaceUri">The namespace URI.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.normalize">
            <summary>
            Normalizes the node.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.cloneNode(System.Boolean)">
            <summary>
            Creates a copy of the node.
            </summary>
            <param name="deep">Indicates whether to copy all descendant nodes. This parameter is
            defaulted to <B>false</B>.</param>
            <returns>The cloned node.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.isSameNode(Peachpie.Library.XmlDom.DOMNode)">
            <summary>
            Indicates if two nodes are the same node.
            </summary>
            <param name="anotherNode">The other node.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.isSupported(System.String,System.String)">
            <summary>
            Checks if a feature is supported for the specified version.
            </summary>
            <param name="feature">The feature to test.</param>
            <param name="version">The version number of the <paramref name="feature"/> to test.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.C14N(System.Boolean,System.Boolean,Pchp.Core.PhpArray,Pchp.Core.PhpArray)">
            <summary>
            Canonicalize nodes to a string.
            </summary>
            <param name="exclusive">Enable exclusive parsing of only the nodes matched by
            the provided xpath or namespace prefixes.</param>
            <param name="with_comments">Retain comments in output.</param>
            <param name="xpath">An array of xpaths to filter the nodes by.</param>
            <param name="ns_prefixes">An array of namespace prefixes to filter the nodes by.</param>
            <returns>Returns canonicalized nodes as a string or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.C14NFile(System.String,System.Boolean,System.Boolean,Pchp.Core.PhpArray,Pchp.Core.PhpArray)">
            <summary>
            Canonicalize nodes to a file.
            </summary>
            <param name="uri">Path to write the output to.</param>
            <param name="exclusive">Enable exclusive parsing of only the nodes matched by
            the provided xpath or namespace prefixes.</param>
            <param name="with_comments">Retain comments in output.</param>
            <param name="xpath">An array of xpaths to filter the nodes by.</param>
            <param name="ns_prefixes">An array of namespace prefixes to filter the nodes by.</param>
            <returns>Number of bytes written or FALSE on failure </returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.getLineNo">
            <summary>
            Gets line number for where the node is defined. 
            </summary>
            <returns>Always returns the line number where the node was defined in.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNode.getNodePath">
            <summary>
            Gets an XPath location path for the node.
            </summary>
            <returns>Returns a <see cref="T:System.String"/> containing the XPath, or NULL in case of an error. </returns>
        </member>
        <member name="F:Peachpie.Library.XmlDom.DOMNodeList._list">
            <summary>
            List of the nodes.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.DOMNodeList._element">
            <summary>
            Current element index.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNodeList.length">
            <summary>
            The number of nodes in the list. The range of valid child node indices is 0 to length - 1 inclusive.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMNodeList.item(System.Int32)">
            <summary>
            Retrieves a node specified by an index.
            </summary>
            <param name="index">The index.</param>
            <returns>The node or <B>NULL</B> if the <paramref name="index"/> is invalid.</returns>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMNotation">
            <summary>
            DOM notation.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNotation.publicId">
            <summary>
            Returns the value of the public identifier on the notation declaration.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNotation.systemId">
            <summary>
            Returns the value of the system identifier on the notation declaration.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNotation.nodeName">
            <summary>
            Returns the name of the notation node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNotation.nodeValue">
            <summary>
            Returns or sets the value of the notation node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMNotation.attributes">
            <summary>
            Returns the attributes of this notation node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMProcessingInstruction.nodeName">
            <summary>
            Returns the name of the processing instruction.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMProcessingInstruction.nodeValue">
            <summary>
            Returns or sets the value of the processing instruction.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMProcessingInstruction.namespaceURI">
            <summary>
            Returns the namespace URI of the processing instruction.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMProcessingInstruction.nodeType">
            <summary>
            Returns the type of the node (<see cref="F:Peachpie.Library.XmlDom.NodeType.ProcessingInstruction"/>).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMProcessingInstruction.target">
            <summary>
            Returns the target (name) of the processing instruction.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMProcessingInstruction.data">
            <summary>
            Returns or sets the data (value) of the processing instruction.
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.DOMXPath">
            <summary>
            Supports XPath 1.0.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.DOMXPath.XPathNavigator">
            <summary>
            Object used to evaluate XPath queries.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.DOMXPath.NamespaceManagerFull">
            <summary>
            Namespace manager containing all the namespaces defined in the document.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.DOMXPath.NamespaceManagerExplicit">
            <summary>
            Namespace manager containing only explicitly added namespaces.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.DOMXPath.document">
            <summary>
            Returns the <see cref="T:Peachpie.Library.XmlDom.DOMDocument"/> associated with this object.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMXPath.registerNamespace(System.String,System.String)">
            <summary>
            Registeres the given namespace with the collection of known namespaces.
            </summary>
            <param name="prefix">The prefix to associate with the namespace being registered.</param>
            <param name="uri">The namespace to register.</param>
            <returns><B>True</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMXPath.query(System.String,Peachpie.Library.XmlDom.DOMNode,System.Boolean)">
            <summary>
            Evaluates the given XPath expression.
            </summary>
            <param name="expr">The expression to evaluate.</param>
            <param name="contextnode">The context node for doing relative XPath queries. By default, the queries are
            relative to the root element.</param>
            <param name="registerNodeNS">Can be specified to disable automatic registration of the context node namespace.</param>
            <returns>The <see cref="T:Peachpie.Library.XmlDom.DOMNodeList"/> containg the result or <B>false</B> on error.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMXPath.evaluate(System.String,Peachpie.Library.XmlDom.DOMNode,System.Boolean)">
            <summary>
            Evaluates the given XPath expression and returns a typed result if possible.
            </summary>
            <param name="expr">The expression to evaluate.</param>
            <param name="contextnode">The context node for doing relative XPath queries. By default, the queries are
            relative to the root element.</param>
            <param name="registerNodeNS">Can be specified to disable automatic registration of the context node namespace.</param>
            <returns>A typed result if possible or a <see cref="T:Peachpie.Library.XmlDom.DOMNodeList"/> containing all nodes matching the
            given <paramref name="expr"/>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMXPath.registerPhpFunctions(Pchp.Core.PhpArray)">
            <summary>
            Register PHP functions as XPath functions.
            </summary>
            <param name="restrict">Use this parameter to only allow certain functions to be called from XPath. 
            This parameter can be either a string (a function name) or an array of function names.</param>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMXPath.registerPhpFunctions(System.String)">
            <summary>
            Register PHP functions as XPath functions.
            </summary>
            <param name="restrict">Use this parameter to only allow certain functions to be called from XPath. 
            This parameter can be either a string (a function name) or an array of function names.</param>
        </member>
        <member name="M:Peachpie.Library.XmlDom.DOMXPath.registerPhpFunctions">
            <summary>
            Register PHP functions as XPath functions.
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.DocumentFragmentEmpty">
            <summary>
              Looks up a localized string similar to Document fragment is empty.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorAttributeInUse">
            <summary>
              Looks up a localized string similar to Inuse Attribute Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorBadHierarchy">
            <summary>
              Looks up a localized string similar to Hierarchy Request Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorDataNotAllowed">
            <summary>
              Looks up a localized string similar to No Data Allowed Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorDomModificationNotAllowed">
            <summary>
              Looks up a localized string similar to No Modification Allowed Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorIndexOutOfBounds">
            <summary>
              Looks up a localized string similar to Index Size Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorInvalidAccess">
            <summary>
              Looks up a localized string similar to Invalid Access Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorInvalidCharacter">
            <summary>
              Looks up a localized string similar to Invalid Character Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorInvalidState">
            <summary>
              Looks up a localized string similar to Invalid State Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorModificationNotAllowed">
            <summary>
              Looks up a localized string similar to Invalid Modification Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorNamespaceError">
            <summary>
              Looks up a localized string similar to Namespace Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorNotFound">
            <summary>
              Looks up a localized string similar to Not Found Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorNotSupported">
            <summary>
              Looks up a localized string similar to Not Supported Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorStringTooLong">
            <summary>
              Looks up a localized string similar to DOM String Size Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorSyntaxError">
            <summary>
              Looks up a localized string similar to Syntax Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorValidationError">
            <summary>
              Looks up a localized string similar to Validation Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ErrorWrongDocument">
            <summary>
              Looks up a localized string similar to Wrong Document Error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.ExsltSupportMissing">
            <summary>
              Looks up a localized string similar to EXSLT support requires the Mvp.Xml library version 2.0 (assembly version 2.0.2158.1055) available at http://www.xmlmvp.org/. Insert Mvp.Xml.dll to GAC in order to enable EXSLT support..
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.HandlerNotAllowed">
            <summary>
              Looks up a localized string similar to Not allowed to call handler &apos;{0}()&apos;.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.InvalidNodeType">
            <summary>
              Looks up a localized string similar to Invalid node type.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.InvalidParameterKey">
            <summary>
              Looks up a localized string similar to Invalid array key (must be string).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.InvalidStateError">
            <summary>
              Looks up a localized string similar to Invalid state error.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.NotYetImplemented">
            <summary>
              Looks up a localized string similar to Not yet implemented.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.PostLoadDtdUnsupported">
            <summary>
              Looks up a localized string similar to Post-load DTD schema validation is not supported.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.RelaxNGUnsupported">
            <summary>
              Looks up a localized string similar to RELAX NG schema validation is not supported.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.SchemaCreateUnsupported">
            <summary>
              Looks up a localized string similar to Default/fixed value nodes creation during XSD schema validation is not supported.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.SimpleXmlAssignmentToDuplicateNodes">
            <summary>
              Looks up a localized string similar to Cannot assign to an array of nodes (duplicate subnodes of name &apos;{0}&apos; detected).
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.SimpleXmlImportNotAssociated">
            <summary>
              Looks up a localized string similar to The imported node must be associated with an XML document.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.SimpleXmlInvalidClassName">
            <summary>
              Looks up a localized string similar to Class &apos;{0}&apos; is not derived from SimpleXMLElement..
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.SimpleXmlInvalidNodeToImport">
            <summary>
              Looks up a localized string similar to Invalid node type. Only instances of DOMElement and DOMDocument (contaning the root element) can be imported.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.SimpleXmlNotImplemented">
            <summary>
              Looks up a localized string similar to Cooperation with the SimpleXML extension is not implemented.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.SimpleXmlUnsupportedWriteConversion">
            <summary>
              Looks up a localized string similar to It is not possible to assign complex types to nodes.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.Resources.XmlWritterNumberOfBytesUnsupported">
            <summary>
              Looks up a localized string similar to Obtaining the number of bytes written to the current type of stream is not supported..
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.SimpleXml">
            <summary>
            Contains implementation of SimpleXML functions.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXml.simplexml_load_file(Pchp.Core.Context,System.String,System.String,System.Int32)">
            <summary>
            Loads an XML file into an object.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="fileName">The file name.</param>
            <param name="className">The name of the class whose instance should be returned (must extend
            <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/>).</param>
            <param name="options">Additional parameters (unsupported).</param>
            <returns>An instance of <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or of the class specified by
            <paramref name="className"/>, or <B>false</B> on error.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXml.simplexml_load_string(Pchp.Core.Context,System.String,System.String,System.Int32)">
            <summary>
            Loads a string of XML into an object.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="data">The XML string.</param>
            <param name="className">The name of the class whose instance should be returned (must extend
            <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/>).</param>
            <param name="options">Additional parameters (unsupported).</param>
            <returns>An instance of <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or of the class specified by
            <paramref name="className"/>, or <B>false</B> on error.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXml.simplexml_import_dom(Pchp.Core.Context,Peachpie.Library.XmlDom.DOMNode,System.String)">
            <summary>
            Converts a <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> object to a <see cref="T:Peachpie.Library.XmlDom.DOMElement"/>.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="node">A <see cref="T:Peachpie.Library.XmlDom.DOMNode"/>.</param>
            <param name="className">The name of the class whose instance should be returned (must extend
            <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/>).</param>
            <returns>An instance of <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or of the class specified by
            <paramref name="className"/>, or <B>false</B> on error.</returns>
        </member>
        <member name="T:Peachpie.Library.XmlDom.SimpleXMLElement">
            <summary>
            The one and only class comprising the SimpleXML extension.
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.SimpleXMLElement.IterationType">
            <summary>
            Specifies mostly the iteration (<c>foreach</c>) behavior of a <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> instance.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement.IterationType.None">
            <summary>
            The instance represents a nonexistent element.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement.IterationType.Attribute">
            <summary>
            The instance represents an attribute.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement.IterationType.AttributeList">
            <summary>
            The instance represents the attribute list of an element.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement.IterationType.Element">
            <summary>
            The instance represents an element and iteration will include its siblings.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement.IterationType.ChildElements">
            <summary>
            The instance represents an element and iteration will include its child elements.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.SimpleXMLElement.IterationNamespace.namespacePrefix">
            <summary>
            The namespace prefix. If it is not null, the prefix is used.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.SimpleXMLElement.IterationNamespace.namespaceUri">
            <summary>
            The namespace of included elements/attributes. (Namespace of prefix if prefix is used)
            This value is always not null valid namespace (or empty string).
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.IterationNamespace.CreateWithPrefix(System.String,System.Xml.XmlNode)">
            <summary>
            Create namespace iteration type by prefix.
            </summary>
            <param name="prefix"></param>
            <param name="relatedNode"></param>
            <returns></returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.IterationNamespace.CreateWithPrefix(System.Xml.XmlNode)">
            <summary>
            Create namespace iteration type by prefix.
            </summary>
            <param name="relatedNode"></param>
            <returns></returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.IterationNamespace.CreateWithNamespace(System.String)">
            <summary>
            Create namespace iteration type by full namespace URI. Attributes with default namespace (with empty prefix) will not be included.
            </summary>
            <param name="namespaceUri"></param>
            <returns></returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.IterationNamespace.IsIn(System.Xml.XmlNode)">
            <summary>
            Determine if the given XML node has the namespace.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.IterationNamespace.GetFirstChildIn(System.Xml.XmlNode,System.String)">
            <summary>
            Get the node[prefix:name] or node[name, ns] according to the namespace iteration type.
            </summary>
            <param name="node"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement._ctx">
            <summary>
            Runtime context. Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement.className">
            <summary>
            Name of a class, which will be used when initializing children. Class which extends SimpleXmlElement HAS to be used. 
            Non-null value means, that this instance of<see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> was initialized with specified className.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement._element">
            <summary>
            Non-<B>null</B> except for construction (between ctor and <see cref="M:Peachpie.Library.XmlDom.SimpleXMLElement.__construct(System.String,System.Int32,System.Boolean)"/>
            or <see cref="P:Peachpie.Library.XmlDom.SimpleXMLElement.XmlElement"/> setter invocation).
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement._namespaceManager">
            <summary>
            Lazily created namespace manager used for XPath queries.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement.XmlAttribute">
            <summary>
            The attribute (if this instance represents an individual attribute).
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement.iterationType">
            <summary>
            Specifies iteration behavior of this instance (what it actually represents).
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement.iterationNamespace">
            <summary>
            The prefix or namespace URI of the elements/attributes that should be iterated and dumped.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement.intermediateElements">
            <summary>
            A list of names of elements representing the path in the document that should be added
            when a field or item is written to this instance.
            </summary>
            <remarks>
            This field supports <c>$doc->elem1->elem2->elem3 = "value"</c>, which creates <c>elem1</c>,
            <c>elem2</c>, and <c>elem3</c> if they do not already exist. Becomes non-<B>null</B> when
            an unknown element is read.
            </remarks>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.#ctor(Pchp.Core.Context,System.String,System.Int32,System.Boolean)">
            <summary>
            Public constructor. Constructs the inner <see cref="P:Peachpie.Library.XmlDom.SimpleXMLElement.XmlElement"/> with <paramref name="data"/>.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="data">Xml data.</param>
            <param name="options">Options.</param>
            <param name="dataIsUrl">Whether data points to URL. Default is false.</param>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.Create(Pchp.Core.Context,System.String)">
            <summary>
            Creates a new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="className">The name of the class to create or <B>null</B>.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.Create(Pchp.Core.Context,System.String,System.Xml.XmlElement,Peachpie.Library.XmlDom.SimpleXMLElement.IterationType,Peachpie.Library.XmlDom.SimpleXMLElement.IterationNamespace)">
            <summary>
            Creates a new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="className">The name of the class to create or <B>null</B>.</param>
            <param name="xmlElement">The <see cref="P:Peachpie.Library.XmlDom.SimpleXMLElement.XmlElement"/> to wrap.</param>
            <param name="iterationType">Iteration behavior of new instance.</param>
            <param name="iterationNamespace">The namespace URI of the elements/attributes that should be iterated and dumped.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.Create(Pchp.Core.Context,System.String,System.Xml.XmlElement,Peachpie.Library.XmlDom.SimpleXMLElement.IterationType)">
            <summary>
            Creates a new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="className">The name of the class to create or <B>null</B>.</param>
            <param name="xmlElement">The <see cref="P:Peachpie.Library.XmlDom.SimpleXMLElement.XmlElement"/> to wrap.</param>
            <param name="iterationType">Iteration behavior of new instance.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.Create(Pchp.Core.Context,System.String,System.Xml.XmlElement)">
            <summary>
            Creates a new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="xmlElement">The <see cref="P:Peachpie.Library.XmlDom.SimpleXMLElement.XmlElement"/> to wrap.</param>
            <param name="className">The name of the class to create or <B>null</B>.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.Create(Pchp.Core.Context,System.String,System.Xml.XmlAttribute,Peachpie.Library.XmlDom.SimpleXMLElement.IterationNamespace)">
            <summary>
            Creates a new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="className">The name of the class to create or <B>null</B>.</param>
            <param name="xmlAttribute">The <see cref="P:Peachpie.Library.XmlDom.SimpleXMLElement.XmlElement"/> to wrap.</param>
            <param name="iterationNamespace">The namespace URI of the elements/attributes that should be iterated and dumped.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.Create(Pchp.Core.Context,System.String,System.Xml.XmlAttribute)">
            <summary>
            Creates a new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="className">The name of the class to create or <B>null</B>.</param>
            <param name="xmlAttribute">The <see cref="P:Peachpie.Library.XmlDom.SimpleXMLElement.XmlElement"/> to wrap.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> or a derived class.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.ToString">
            <summary>
            String representation of the XML element.
            </summary>
            <returns>XML element content.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.__toString">
            <summary>
            String representation of the XML element.
            </summary>
            <returns>XML element content.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.Pchp#Core#IPhpConvertible#ToLong">
            <summary>
            Internal to-<see cref="T:System.Int32"/> conversion.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.Pchp#Core#IPhpConvertible#ToDouble">
            <summary>
            Internal to-<see cref="T:System.Double"/> conversion.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.Pchp#Core#IPhpConvertible#ToBoolean">
            <summary>
            Internal to-<see cref="T:System.Boolean"/> conversion.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.Pchp#Core#IPhpCloneable#Clone">
            <summary>
            Invoked when the instance is being cloned.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.SimpleXMLElement.__peach__runtimeFields">
            <summary>
            Special field containing runtime fields.
            </summary>
            <remarks>
            The field is handled by runtime and is not intended for direct use.
            Magic methods for property access are ignored without runtime fields.
            </remarks>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.__get(System.String)">
            <summary>
            Property reading (i.e. child element getter).
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.__set(System.String,Pchp.Core.PhpValue)">
            <summary>
            Property writing (i.e. child element setter).
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.__unset(System.String)">
            <summary>
            Property unsetting (i.e. child element remover).
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.__isset(System.String)">
            <summary>
            Property isset testing (i.e. child element existence test).
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.GetPhpInnerText(System.Xml.XmlNode)">
            <summary>
            Get inner text, child elements only (not recursive).
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.GetPhpChildElement(System.Xml.XmlNode)">
            <summary>
            Returns given child node as a SimpleXMLElement, or as a simple string.
            It depends on its child nodes. (Because of PHP; node is represented as a string, if it has a child node of type Text)
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.Pchp#Core#IPhpConvertible#ToArray">
            <summary>
            Overrides conversion of SimpleXMLElement to array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.asXML(Pchp.Core.Context,System.String)">
            <summary>
            Return a well-formed XML string based on this <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/>.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.xpath(System.String)">
            <summary>
            Runs an XPath query on the XML data.
            </summary>
            <param name="path">The XPath query string.</param>
            <returns>A <see cref="T:Pchp.Core.PhpArray"/> of <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/>s or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.registerXPathNamespace(System.String,System.String)">
            <summary>
            Creates a prefix/ns context for the next XPath query.
            </summary>
            <param name="prefix">The namespace prefix.</param>
            <param name="namespaceUri">The namespace URI.</param>
            <returns><B>True</B> on success, <B>false</B> on error.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.attributes(System.String,System.Boolean)">
            <summary>
            Identifies the element's attributes.
            </summary>
            <param name="ns">Namespace URI or prefix of the attributes to identify.</param>
            <param name="isPrefix">If <B>true</B> <paramref name="ns"/> denotes a prefix, if <B>false</B> it
            is a namespace URI.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> wrapping the same element but enumerating and
            dumping only the matching attributes.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.children(System.String,System.Boolean)">
            <summary>
            Identifies the element's child elements.
            </summary>
            <param name="ns">Namespace URI or prefix of the elements to identify.</param>
            <param name="isPrefix">If <B>true</B> <paramref name="ns"/> denotes a prefix, if <B>false</B> it
            is a namespace URI.</param>
            <returns>A new <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> wrapping the same element but enumerating and
            dumping only the matching elements.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.getNamespaces(System.Boolean)">
            <summary>
            Returns namespaces used by children of this node.
            </summary>
            <param name="recursive">If <B>true</B> returns namespaces used by all children recursively.</param>
            <returns>An <see cref="T:Pchp.Core.PhpArray"/> keyed by prefix with values being namespace URIs.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.getDocNamespaces(System.Boolean)">
            <summary>
            Returns namespaces used by the document.
            </summary>
            <param name="recursive">If <B>true</B> returns namespaces used by all nodes recursively.</param>
            <returns>An <see cref="T:Pchp.Core.PhpArray"/> keyed by prefix with values being namespace URIs.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.getName">
            <summary>
            Gets the name of the XML element.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.addChild(System.String,System.String,System.String)">
            <summary>
            Adds a child element to this XML element.
            </summary>
            <param name="qualifiedName">The qualified name of the element to add.</param>
            <param name="value">The optional element value.</param>
            <param name="namespaceUri">The optional element namespace URI.</param>
            <returns>The <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> of the child.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.addAttribute(System.String,System.String,System.String)">
            <summary>
            Adds an attribute to this XML element.
            </summary>
            <param name="qualifiedName">The qualified name of the attribute to add.</param>
            <param name="value">The attribute value.</param>
            <param name="namespaceUri">The optional attribute namespace URI.</param>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.GetChildElementValue(Pchp.Core.Context,System.String,System.Xml.XmlElement)">
            <summary>
            Wraps a node or returns its inner text if it is an element containing nothing but text.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.GetNodeText(System.Xml.XmlNode)">
            <summary>
            Returns the text data if the supplied node is treated as &quot;text&quot;.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.GetNodeNamespaces(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Returns an array of namespaces used by children of the given node (recursively).
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.GetSiblingForIndex(System.Int32)">
            <summary>
            Returns the <paramref name="index"/>th sibling with the same local name and namespace URI or <B>null</B>.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.GetAttributeForIndex(System.Int32)">
            <summary>
            Returns the <param name="index"/>th attribute with the current namespace URI or<B>null</B>.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.BuildUpIntermediateElements">
            <summary>
            Creates elements stored in <see cref="F:Peachpie.Library.XmlDom.SimpleXMLElement.intermediateElements"/> when it turns out that
            there will be a write.
            </summary>
            <remarks><seealso cref="F:Peachpie.Library.XmlDom.SimpleXMLElement.intermediateElements"/></remarks>
        </member>
        <member name="M:Peachpie.Library.XmlDom.SimpleXMLElement.count">
            <summary>
            Count childs in the element.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Peachpie.Library.XmlDom.NodeType">
            <summary>
            Enumerates possible DOM node types.
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.AttributeType">
            <summary>
            Enumerates who-knows-what. (TODO)
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.XmlDom">
            <summary>
            Implements constants and functions.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_INDEX_SIZE_ERR">
            <summary>
            Index or size is negative, or greater than the allowed value. 
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOMSTRING_SIZE_ERR">
            <summary>
            The specified range of text does not fit into a string.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_HIERARCHY_REQUEST_ERR">
            <summary>
            A node is inserted somewhere it doesn't belong.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_WRONG_DOCUMENT_ERR">
            <summary>
            A node is used in a different document than the one that created it.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_INVALID_CHARACTER_ERR">
            <summary>
            An invalid or illegal character is specified, such as in a name.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_NO_DATA_ALLOWED_ERR">
            <summary>
            Data is specified for a node which does not support data.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_NO_MODIFICATION_ALLOWED_ERR">
            <summary>
            An attempt is made to modify an object where modifications are not allowed.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_NOT_FOUND_ERR">
            <summary>
            An attempt is made to reference a node in a context where it does not exist.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_NOT_SUPPORTED_ERR">
            <summary>
            The implementation does not support the requested type of object or operation.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_INUSE_ATTRIBUTE_ERR">
            <summary>
            An attempt is made to add an attribute that is already in use elsewhere.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_INVALID_STATE_ERR">
            <summary>
            An attempt is made to use an object that is not, or is no longer, usable.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_SYNTAX_ERR">
            <summary>
            An invalid or illegal string is specified.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_INVALID_MODIFICATION_ERR">
            <summary>
            An attempt is made to modify the type of the underlying object.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_NAMESPACE_ERR">
            <summary>
            An attempt is made to create or change an object in a way which is incorrect with
            regard to namespaces.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_INVALID_ACCESS_ERR">
            <summary>
            A parameter or an operation is not supported by the underlying object.
            </summary>
        </member>
        <member name="F:Peachpie.Library.XmlDom.XmlDom.DOM_VALIDATION_ERR">
            <summary>
            A call to a method such as <B>insertBefore</B> or <B>removeChild</B> would make the
            node invalid with respect to &quot;partial validity&quot;, this exception would be
            raised and the operation would not be done. 
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XmlDom.dom_import_simplexml(Peachpie.Library.XmlDom.SimpleXMLElement)">
            <summary>
            Converts a <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> object to a <see cref="T:Peachpie.Library.XmlDom.DOMElement"/>.
            </summary>
            <param name="node">The <see cref="T:Peachpie.Library.XmlDom.SimpleXMLElement"/> node.</param>
            <returns>The DOMElement node added or FALSE if any errors occur.</returns>
        </member>
        <member name="T:Peachpie.Library.XmlDom.XMLReader">
            <summary>
            The XMLReader extension is an XML pull parser. The reader acts as a cursor going forward
            on the document stream and stopping at each node on the way.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.attributeCount">
            <summary>
            The number of attributes on the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.baseURI">
            <summary>
            The base URI of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.depth">
            <summary>
            Depth of the node in the tree, starting at 0.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.hasAttributes">
            <summary>
            Indicates if node has attributes.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.hasValue">
            <summary>
            Indicates if node has a text value.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.isDefault">
            <summary>
            Indicates if attribute is defaulted from DTD.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.isEmptyElement">
            <summary>
            Indicates if node is an empty element tag.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.localName">
            <summary>
            The local name of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.name">
            <summary>
            The qualified name of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.namespaceURI">
            <summary>
            The URI of the namespace associated with the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.nodeType">
            <summary>
            The node type for the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.prefix">
            <summary>
            The prefix of the namespace associated with the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.value">
            <summary>
            The text value of the node.
            </summary>
        </member>
        <member name="P:Peachpie.Library.XmlDom.XMLReader.xmlLang">
            <summary>
            The xml:lang scope which the node resides.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.close">
            <summary>
            Closes the input the XMLReader object is currently parsing.
            </summary>
            <returns>TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.expand(Peachpie.Library.XmlDom.DOMNode)">
            <summary>
            Currently not supported.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.getAttribute(System.String)">
            <summary>
            Returns the value of a named attribute or NULL if the attribute does not exist or
            not positioned on an element node.
            </summary>
            <param name="name">The name of the attribute.</param>
            <returns>The value of the attribute, or NULL if no attribute with the given name is
            found or not positioned on an element node.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.getAttributeNo(System.Int32)">
            <summary>
            Returns the value of an attribute based on its position or an empty string if attribute
            does not exist or not positioned on an element node.
            </summary>
            <param name="index">The position of the attribute.</param>
            <returns>The value of the attribute, or NULL if no attribute exists at index or is not
            positioned on the element.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.getAttributeNs(System.String,System.String)">
            <summary>
            Returns the value of an attribute by name and namespace URI or an empty string if attribute
            does not exist or not positioned on an element node.
            </summary>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <returns>The value of the attribute, or NULL if no attribute with the given localName and
            namespaceURI is found or not positioned of element.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.getParserProperty(System.Int32)">
            <summary>
            Indicates if specified property has been set.
            </summary>
            <param name="property">One of the parser option constants.</param>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.isValid">
            <summary>
            Returns a boolean indicating if the document being parsed is currently valid.
            </summary>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.lookupNamespace(System.String)">
            <summary>
            Lookup in scope namespace for a given prefix.
            </summary>
            <param name="prefix">String containing the prefix.</param>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.moveToAttribute(System.String)">
            <summary>
            Positions cursor on the named attribute.
            </summary>
            <param name="name">The name of the attribute.</param>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.moveToAttributeNo(System.Int32)">
            <summary>
            Positions cursor on attribute based on its position.
            </summary>
            <param name="index">The position of the attribute.</param>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.moveToAttributeNs(System.String,System.String)">
            <summary>
            Positions cursor on the named attribute in specified namespace.
            </summary>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.moveToElement">
            <summary>
            Moves cursor to the parent Element of current Attribute.
            </summary>
            <returns>Returns TRUE if successful and FALSE if it fails or not positioned on Attribute
            when this method is called.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.moveToFirstAttribute">
            <summary>
            Moves cursor to the first Attribute.
            </summary>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.moveToNextAttribute">
            <summary>
            Moves cursor to the next Attribute if positioned on an Attribute or moves to first attribute
            if positioned on an Element.
            </summary>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.next(System.String)">
            <summary>
            Positions cursor on the next node skipping all subtrees.
            </summary>
            <param name="localname">The name of the next node to move to.</param>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.open(Pchp.Core.Context,System.String,System.String,System.Int32)">
            <summary>
            Set the URI containing the XML document to be parsed.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="URI">URI pointing to the document.</param>
            <param name="encoding">The document encoding or NULL.</param>
            <param name="options">A bitmask of the LIBXML_* constants.</param>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.read">
            <summary>
            Moves cursor to the next node in the document.
            </summary>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.readInnerXML">
            <summary>
            Reads the contents of the current node, including child nodes and markup.
            </summary>
            <returns>Returns the contents of the current node as a string. Empty string on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.readOuterXML">
            <summary>
            Reads the contents of the current node, including the node itself.
            </summary>
            <returns>Returns the contents of current node, including itself, as a string. Empty string on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.readString">
            <summary>
            Reads the contents of the current node as a string.
            </summary>
            <returns>Returns the content of the current node as a string. Empty string on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.setParserProperty(System.Int32,System.Boolean)">
            <summary>
            Set parser options. The options must be set after <see cref="M:Peachpie.Library.XmlDom.XMLReader.open(Pchp.Core.Context,System.String,System.String,System.Int32)"/> or
            <see cref="M:Peachpie.Library.XmlDom.XMLReader.xml(System.String,System.String,System.Int32)"/> are called and before the first <see cref="M:Peachpie.Library.XmlDom.XMLReader.read"/> call.
            </summary>
            <param name="property">One of the parser option constants.</param>
            <param name="newValue">If set to TRUE the option will be enabled otherwise will be disabled.</param>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.setRelaxNGSchema(System.String)">
            <summary>
            Currently not supported.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.setRelaxNGSchemaSource(System.String)">
            <summary>
            Currently not supported.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.setSchema(System.String)">
            <summary>
            Currently not supported.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XMLReader.xml(System.String,System.String,System.Int32)">
            <summary>
            Set the data containing the XML to parse.
            </summary>
            <param name="source">String containing the XML to be parsed.</param>
            <param name="encoding">The document encoding or NULL.</param>
            <param name="options">A bitmask of the LIBXML_* constants.</param>
            <returns>Returns TRUE on success or FALSE on failure.</returns>
        </member>
        <member name="T:Peachpie.Library.XmlDom.XMLReader.FileUriResolver">
            <summary>
            HTML-encoded paths are converted into unix path. Probably .Net trying to assume we're a web-server.
            Original URI from PHP: file:///Z%3A%5CPhalanger%5CTesting%5CTests%5CXml%5CxmlReader/dtdexample.dtd
            Uri.ToString(): file:///Z:/Phalanger/Testing/Tests/Xml/xmlReader/dtdexample.dtd 
            Uri.LocalPath: /Z:/Phalanger/Testing/Tests/Xml/xmlReader/dtdexample.dtd
            As a workaround, we simply load Uri.ToString() into a new Uri (so the resulting LocalPath is correct).
            Result: Z:\Phalanger\Testing\Tests\Xml\xmlReader\dtdexample.dtd
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.XmlWriter">
            <summary>
            This extension represents a writer that provides a non-cached, forward-only means of generating
            streams or files containing XML data.
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.CloneType">
            <summary>
            Enumerates the clone behavior. (Where is this supposed to be used?)
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.XSLTProcessor">
            <summary>
            Implements the XSLT processor.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.#cctor">
            <summary>
            Determines whether Mvp.Xml is available and reflects the MvpXslTransform type.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.importStylesheet(Peachpie.Library.XmlDom.DOMDocument)">
            <summary>
            Import a stylesheet.
            </summary>
            <param name="doc">The imported style sheet passed as a <see cref="T:Peachpie.Library.XmlDom.DOMDocument"/> object.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.transformToDoc(Peachpie.Library.XmlDom.DOMNode)">
            <summary>
            Transforms the source node to a <see cref="T:Peachpie.Library.XmlDom.DOMDocument"/> applying the stylesheet given by the
            <see cref="M:Peachpie.Library.XmlDom.XSLTProcessor.importStylesheet(Peachpie.Library.XmlDom.DOMDocument)"/> method.
            </summary>
            <param name="node">The node to be transformed.</param>
            <returns>The resulting <see cref="T:Peachpie.Library.XmlDom.DOMDocument"/> or <B>false</B> on error.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.transformToUri(Pchp.Core.Context,Peachpie.Library.XmlDom.DOMDocument,System.String)">
            <summary>
            Transforms the source node to an URI applying the stylesheet given by the
            <see cref="M:Peachpie.Library.XmlDom.XSLTProcessor.importStylesheet(Peachpie.Library.XmlDom.DOMDocument)"/> method.
            </summary>
            <param name="ctx">The current runtime context.</param>
            <param name="doc">The document to transform.</param>
            <param name="uri">The destination URI.</param>
            <returns>Returns the number of bytes written or <B>false</B> if an error occurred.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.transformToXml(Peachpie.Library.XmlDom.DOMDocument)">
            <summary>
            Transforms the source node to a string applying the stylesheet given by the
            <see cref="M:Peachpie.Library.XmlDom.XSLTProcessor.importStylesheet(Peachpie.Library.XmlDom.DOMDocument)"/> method.
            </summary>
            <param name="doc">The document to transform.</param>
            <returns>The result of the transformation as a string or FALSE on error.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.setParameter(System.String,Pchp.Core.PhpArray,System.String)">
            <summary>
             Sets value for a parameter.
            </summary>
            <param name="ns">The namespace URI of the XSLT parameter.</param>
            <param name="name">The local name of the XSLT parameter or an array of name =&gt; option pairs.</param>
            <param name="value">The new value of the XSLT parameter.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.setParameter(System.String,System.String,System.String)">
            <summary>
             Sets value for a parameter.
            </summary>
            <param name="ns">The namespace URI of the XSLT parameter.</param>
            <param name="name">The local name of the XSLT parameter or an array of name =&gt; option pairs.</param>
            <param name="value">The new value of the XSLT parameter.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.getParameter(System.String,System.String)">
            <summary>
            Gets value of a parameter.
            </summary>
            <param name="ns">The namespace URI of the XSLT parameter.</param>
            <param name="name">The local name of the XSLT parameter.</param>
            <returns>The value of the parameter (as a string), or FALSE if it's not set.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.removeParameter(System.String,System.String)">
            <summary>
            Removes a parameter.
            </summary>
            <param name="ns">The namespace URI of the XSLT parameter.</param>
            <param name="name">The local name of the XSLT parameter.</param>
            <returns><B>True</B> or <B>false</B>.</returns>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.hasExsltSupport">
            <summary>
            Determine if this extension has EXSLT support.
            </summary>
            <returns><B>False</B>.</returns>
            <remarks>
            A EXSLT implementation for the .NET XSL can be found here
            <A href="http://mvp-xml.sourceforge.net/exslt/">http://mvp-xml.sourceforge.net/exslt/</A>.</remarks>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.registerPHPFunctions(System.String)">
            <summary>
            Enables the ability to use PHP functions as XSLT functions.
            </summary>
            <param name="restrict">A string or array denoting function(s) to be made callable.</param>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.registerPHPFunctions(Pchp.Core.PhpArray)">
            <summary>
            Enables the ability to use PHP functions as XSLT functions.
            </summary>
            <param name="restrict">A string or array denoting function(s) to be made callable.</param>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XSLTProcessor.registerPHPFunctions">
            <summary>
            Enables the ability to use PHP functions as XSLT functions.
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.XsltConvertor">
            <summary>
            Provides conversion routines between .NET and PHP representation of W3C data types.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XsltConvertor.DotNetToPhp(System.Object)">
            <summary>
            Converts a W3C .NET object to the corresponding W3C PHP object.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XsltConvertor.PhpToDotNet(Pchp.Core.Context,Pchp.Core.PhpValue)">
            <summary>
            Converts a W3C PHP object to the corresponding W3C .NET object.
            </summary>
        </member>
        <member name="M:Peachpie.Library.XmlDom.XsltConvertor.PhpToString(Pchp.Core.Context,Pchp.Core.PhpValue)">
            <summary>
            Converts a W3C PHP object to a corresponding string.
            </summary>
        </member>
        <member name="T:Peachpie.Library.XmlDom.XsltUserFunctionHandler">
            <summary>
            Handles PHP function invocations via <code>php:function</code> and <code>php:functionString</code>.
            </summary>
        </member>
    </members>
</doc>
